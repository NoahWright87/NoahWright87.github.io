{"version":3,"sources":["components/BaseComponent.js","components/About.js","components/Contact.js","components/Home.js","components/NavMenu.js","components/Footer.js","components/Layout.js","components/NotFound.js","components/Portfolio.js","components/Resume.js","components/CreateResume.js","App.js","registerServiceWorker.js","index.js"],"names":["BaseComponent","ReactGA","pageview","window","location","pathname","search","scrollTo","Component","About","Container","Row","Jumbotron","Col","sm","to","Button","displayName","name","Contact","initialValues","email","message","validate","values","errors","test","onSubmit","setSubmitting","setTimeout","handleSubmit","isSubmitting","htmlFor","type","component","as","disabled","args","request","axios","post","then","response","alert","catch","err","finally","Home","HomeCard","title","linkUrl","description","props","Card","body","CardTitle","tag","CardBody","CardText","linkText","NavMenu","toggleNavbar","bind","state","collapsed","this","setState","Navbar","className","light","NavbarBrand","Link","NavbarToggler","onClick","Collapse","isOpen","navbar","NavItem","NavLink","centering","alignItems","justifyContent","textAlign","Footer","style","ButtonGroup","size","FooterItem","url","href","target","Date","getFullYear","Layout","children","NotFound","Portfolio","PortfolioCard","flex","groupings","require","chain","resumeData","groupBy","map","resumeItems","category","value","Resume","g","r","ResumeItem","organization","startDate","startdate","endDate","enddate","showMonths","accomplishments","skills","monthYearFormat","Intl","DateTimeFormat","year","month","yearFormat","dateDisplay","orgLocDisplay","dateFormat","format","CardSubtitle","ListItems","items","useBadges","i","Badge","List","CreateResume","SignupForm","formik","useFormik","JSON","stringify","id","onChange","handleChange","initialize","App","exact","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","error","debug","gaOptions","siteSpeedSampleRate","rootElement","document","getElementById","ReactDOM","render","URL","process","origin","addEventListener","fetch","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"8uPAGqBA,E,uKACjB,WAEIC,IAAQC,SAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,QAE5DH,OAAOI,SAAS,EAAG,O,GALgBC,a,wCCE9BC,EAAb,4JAGI,WACI,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,+CACA,4FAEJ,kBAACA,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACA,6CACA,wEACA,sZAIuC,kCAJvC,mCAQJ,kBAACD,EAAA,EAAD,KACI,8CAEJ,kBAACA,EAAA,EAAD,KACI,kDAEJ,kBAACA,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKC,GAAI,GAAT,ufAOA,kBAACD,EAAA,EAAD,CAAKC,GAAI,GAAT,yEAIJ,kBAACH,EAAA,EAAD,KACI,gDAEJ,kBAACA,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKC,GAAI,GAAT,yCAGA,kBAACD,EAAA,EAAD,CAAKC,GAAI,GAAT,8PAGwB,2DAHxB,gHAOJ,kBAACH,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKC,GAAI,GAAT,mgBAOA,kBAACD,EAAA,EAAD,CAAKC,GAAI,GAAT,MAIJ,kBAACH,EAAA,EAAD,KACI,sEAEJ,kBAACA,EAAA,EAAD,yRAKA,kBAACA,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKC,GAAI,GACL,8DAEJ,kBAACD,EAAA,EAAD,CAAKC,GAAI,GAAT,0QAMJ,kBAACH,EAAA,EAAD,mWAKA,kBAACA,EAAA,EAAD,KACI,wDAEJ,kBAACA,EAAA,EAAD,+cAMA,kBAACA,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,mCACA,kBAACA,EAAA,EAAD,4CAEJ,kBAACF,EAAA,EAAD,0EAGA,kBAACA,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMI,GAAG,YAAW,kBAACC,EAAA,EAAD,4BA1GxC,GAA2BhB,GAAdS,EACFQ,YAAcR,EAAMS,K,6BCElBC,EAAb,4JAGI,WAAU,IAAD,OACL,OACI,6BACI,4CAEA,kBAAC,IAAD,CACIC,cAAe,CAAEC,MAAO,GAAIH,KAAM,GAAII,QAAS,IAC/CC,SAAU,SAAAC,GACN,IAAMC,EAAS,GAgBf,OAfKD,EAAON,OACRO,EAAOP,KAAO,YAGbM,EAAOH,MAGP,2CAA2CK,KAAKF,EAAOH,SAExDI,EAAOJ,MAAQ,yBAJfI,EAAOJ,MAAQ,WAOdG,EAAOF,UACRG,EAAOH,QAAU,YAEdG,GAEXE,SAAU,SAACH,EAAD,GAAgC,IAArBI,EAAoB,EAApBA,cACjBC,YAAW,WACP,EAAKC,aAAaN,GAClBI,GAAc,KACf,QAGN,gBAAGG,EAAH,EAAGA,aAAH,OACG,kBAAC,IAAD,KACI,6BACI,2BAAOC,QAAQ,QAAf,QACA,kBAAC,IAAD,CAAOC,KAAK,OAAOf,KAAK,SACxB,kBAAC,IAAD,CAAcA,KAAK,OAAOgB,UAAU,SAExC,6BACI,2BAAOF,QAAQ,SAAf,iBACA,kBAAC,IAAD,CAAOC,KAAK,QAAQf,KAAK,UACzB,kBAAC,IAAD,CAAcA,KAAK,QAAQgB,UAAU,SAEzC,6BACI,2BAAOF,QAAQ,WAAf,mBAAgD,6BAChD,kBAAC,IAAD,CAAOC,KAAK,OAAOE,GAAG,WAAWjB,KAAK,YACtC,kBAAC,IAAD,CAAcA,KAAK,UAAUgB,UAAU,SAE3C,6BACI,4BAAQD,KAAK,SAASG,SAAUL,GAAhC,kBAtDhC,0BAkEI,SAAaM,GACT,IAAIC,EAAU,CACVpB,KAAMmB,EAAKnB,KACXG,MAAOgB,EAAKhB,MACZC,QAASe,EAAKf,SAIlBiB,IAAMC,KADI,iEACMF,GAEXG,MAAK,SAAAC,GACFC,MAAM,kDAETC,OAAM,SAAAC,GACHF,MAAM,yEAETG,SAAQ,mBAlFrB,GAA6B9C,GAAhBmB,EACFF,YAAcE,EAAQD,K,sCCDpB6B,EAAb,4JAGI,WACI,OACI,6BACI,kBAACrC,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,KACI,+DACA,sJAEA,kBAAC,IAAD,CAAMG,GAAG,WAAU,kBAACC,EAAA,EAAD,sBAG3B,kBAACN,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACkC,EAAD,CAAUC,MAAM,SAASC,QAAQ,SAASC,YAAY,gCAE1D,kBAACtC,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACkC,EAAD,CAAUC,MAAM,YAAYC,QAAQ,YAAYC,YAAY,8BAGpE,kBAACxC,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACkC,EAAD,CAAUC,MAAM,WAAWC,QAAQ,WAAWC,YAAY,yCAE9D,kBAACtC,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACkC,EAAD,CAAUC,MAAM,aAAaC,QAAQ,UAAUC,YAAY,yBA5BvF,GAA0BnD,GAsC1B,SAASgD,EAASI,GACd,OACI,kBAACC,EAAA,EAAD,CAAMC,MAAI,GACN,kBAACC,EAAA,EAAD,CAAWC,IAAI,MACVJ,EAAMH,OAAS,YAEpB,kBAACQ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAWN,EAAMD,aAAe,kBAChC,kBAAC,IAAD,CAAMpC,GAAIqC,EAAMF,SAAW,KAAK,kBAAClC,EAAA,EAAD,KAASoC,EAAMO,UAAY,iBA9C9DZ,EACF9B,YAAc8B,EAAK7B,K,kECJjB0C,G,MAAb,kDAGE,WAAaR,GAAQ,IAAD,8BAClB,cAAMA,IAEDS,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,MAAQ,CACXC,WAAW,GALK,EAHtB,gDAYE,WACEC,KAAKC,SAAS,CACZF,WAAYC,KAAKF,MAAMC,cAd7B,oBAkBE,WACE,OACE,gCACE,kBAACG,EAAA,EAAD,CAAQC,UAAU,+EAA+EC,OAAK,GACpG,kBAAC3D,EAAA,EAAD,KACE,kBAAC4D,EAAA,EAAD,CAAad,IAAKe,IAAMxD,GAAG,KAA3B,kBACA,kBAACyD,EAAA,EAAD,CAAeC,QAASR,KAAKJ,aAAcO,UAAU,SACrD,kBAACM,EAAA,EAAD,CAAUN,UAAU,uCAAuCO,QAASV,KAAKF,MAAMC,UAAWY,QAAM,GAC9F,wBAAIR,UAAU,wBACZ,kBAACS,EAAA,EAAD,KAAS,kBAACC,EAAA,EAAD,CAAStB,IAAKe,IAAMH,UAAU,YAAYrD,GAAG,KAA7C,SACT,kBAAC8D,EAAA,EAAD,KAAS,kBAACC,EAAA,EAAD,CAAStB,IAAKe,IAAMH,UAAU,YAAYrD,GAAG,WAA7C,WACT,kBAAC8D,EAAA,EAAD,KAAS,kBAACC,EAAA,EAAD,CAAStB,IAAKe,IAAMH,UAAU,YAAYrD,GAAG,cAA7C,cACT,kBAAC8D,EAAA,EAAD,KAAS,kBAACC,EAAA,EAAD,CAAStB,IAAKe,IAAMH,UAAU,YAAYrD,GAAG,aAA7C,UACT,kBAAC8D,EAAA,EAAD,KAAS,kBAACC,EAAA,EAAD,CAAStB,IAAKe,IAAMH,UAAU,YAAYrD,GAAG,YAA7C,qBA/BzB,GAA6BP,cAAhBoD,EACJ3C,YAAc2C,EAAQ1C,K,aCHzB6D,EAAY,CACdC,WAAY,SACZC,eAAgB,SAChBC,UAAW,UAGFC,EAAb,4JAGI,WACI,OACI,kBAACzE,EAAA,EAAD,CAAW0E,MAAOL,GACd,6BACA,kBAACM,EAAA,EAAD,CAAaC,KAAK,MACd,kBAACC,EAAD,CAAYC,IAAI,+CAA+CtE,KAAK,aACpE,kBAACqE,EAAD,CAAYC,IAAI,kCAAkCtE,KAAK,YAE3D,kBAACR,EAAA,EAAD,KACI,yEAA8C,uBAAG+E,KAAK,yDAAyDC,OAAO,UAAxE,4BAC9C,oCAAW,IAAIC,MAAOC,cAAtB,IAAqC,uBAAGH,KAAK,yBAAR,yBAbzD,GAA4BjF,aAoB5B,SAAS+E,EAAWnC,GAChB,OACI,kBAACpC,EAAA,EAAD,CAAQyE,KAAMrC,EAAMoC,KAAO,IAAKE,OAAO,UAClCtC,EAAMlC,MAAQ,aAvBdiE,EACFlE,YAAckE,EAAOjE,KCLzB,IAAM2E,EAAb,4JAGI,WACA,OACE,6BACE,kBAAC,EAAD,MACA,kBAACnF,EAAA,EAAD,KACGuD,KAAKb,MAAM0C,UAEd,kBAAC,EAAD,WAVR,GAA4BtF,aAAfqF,EACJ5E,YAAc4E,EAAO3E,KCHvB,IAAM6E,EAAb,4JAGI,WACI,OACI,6BACI,oCACA,4FAPhB,GAA8B/F,GAAjB+F,EACF9E,YAAc8E,EAAS7E,KCC3B,IAAM8E,EAAb,4JAGI,WACI,OACI,kBAACtF,EAAA,EAAD,KACI,yCACA,kBAACC,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACmF,EAAD,CAAehD,MAAM,iBAAiBE,YAAY,iEAGtD,kBAACtC,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACmF,EAAD,CAAehD,MAAM,oBAAoBE,YAAY,qJAErDD,QAAQ,kDAAkDS,SAAS,qBAG3E,kBAAC/C,EAAA,EAAD,CAAWsF,MAAI,GACX,qCACA,qKAGJ,kBAACvF,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACmF,EAAD,CAAehD,MAAM,aAAaE,YAAY,8KAE1CD,QAAQ,6CAA6CS,SAAS,qBAEtE,kBAAC9C,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACmF,EAAD,CAAehD,MAAM,mBAAmBE,YAAY,8CAChDD,QAAQ,mDAAmDS,SAAS,sBAGhF,kBAAChD,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACmF,EAAD,CAAehD,MAAM,mBAAmBE,YAAY,4BAChDD,QAAQ,kDAAkDS,SAAS,2BArC/F,GAA+B3D,GA6C/B,SAASiG,EAAc7C,GACnB,OACI,kBAACC,EAAA,EAAD,UACI,kBAACE,EAAA,EAAD,CAAWC,IAAI,MACVJ,EAAMH,OAAS,YAEpB,kBAACQ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAWN,EAAMD,aAAe,kBAChC,kBAACnC,EAAA,EAAD,CAAQyE,KAAMrC,EAAMF,SAAW,yBAA0BwC,OAAO,UAAUtC,EAAMO,UAAY,gBArD/FqC,EACF/E,YAAc+E,EAAU9E,K,uCCC7BiF,EAFEC,EAAQ,IAEIC,MAAMC,GAAYC,QAAQ,YAAYC,KAAI,SAACC,EAAaC,GAAd,MAA4B,CAAED,cAAaC,eAAaC,QAEzGC,EAAb,4JAGI,WACI,OACI,kBAAClG,EAAA,EAAD,KACI,sCACA,2BAAG,mFAAwD,uBAAG+E,KAAK,cAAcC,OAAO,UAA7B,aAAxD,MACFS,EAAUK,KAAI,SAAAK,GAAC,OACZ,kBAACnG,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAWwD,UAAU,aAChByC,EAAEH,UAENG,EAAEJ,YAAYD,KAAI,SAAAM,GAAC,OAChB,kBAACC,GAAD,CAAY9D,MAAO6D,EAAE7D,MAAO+D,aAAcF,EAAEE,aAAc5G,SAAU0G,EAAE1G,SAClE6G,UAAWH,EAAEI,UAAWC,QAASL,EAAEM,QAASC,WAAW,OACvDC,gBAAiBR,EAAEQ,gBAAiBC,OAAQT,EAAES,qBAhB9E,GAA4BvH,GAAf4G,EACF3F,YAAc2F,EAAO1F,KAwBhC,IAAMsG,EAAkB,IAAIC,KAAKC,eAAe,QAAS,CAAEC,KAAM,UAAWC,MAAO,UAC7EC,GAAa,IAAIJ,KAAKC,eAAe,QAAS,CAAEC,KAAM,YAG5D,SAASZ,GAAW3D,GAChB,IAAI0E,EAUAC,EATAC,EAAa5E,EAAMiE,WAAaG,EAAkBK,GActD,OAZIC,EADA1E,EAAM6D,WAAa7D,EAAM+D,QACX,4BAAKa,EAAWC,OAAO,IAAItC,KAAKvC,EAAM6D,YAAtC,OAAuDe,EAAWC,OAAO,IAAItC,KAAKvC,EAAM+D,WAC/F/D,EAAM6D,UACC,4BAAKe,EAAWC,OAAO,IAAItC,KAAKvC,EAAM6D,YAAtC,eACP7D,EAAM6D,WAAa7D,EAAM+D,QAClB,4BAAKa,EAAWC,OAAO,IAAItC,KAAKvC,EAAM+D,WACnC,KAGqBY,EAAtC3E,EAAM4D,cAAgB5D,EAAMhD,SAA0B,4BAAKgD,EAAM4D,aAAX,KAA2B5D,EAAMhD,UAClFgD,EAAM4D,cAAgB5D,EAAMhD,SAA0B,4BAAKgD,EAAM4D,aAAe5D,EAAM4D,aAAe5D,EAAMhD,UAC/F,KAGjB,kBAACiD,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,KACI,4BAAKH,EAAMH,QAEf,kBAACiF,EAAA,EAAD,KACI,kBAACvH,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKC,GAAG,KACHiH,GAEL,kBAAClH,EAAA,EAAD,CAAKC,GAAG,IAAIsD,UAAU,cACjB0D,KAIb,kBAACrE,EAAA,EAAD,KACI,kBAAC0E,GAAD,CAAWlF,MAAM,kBAAkBmF,MAAOhF,EAAMkE,kBAChD,kBAACa,GAAD,CAAWlF,MAAM,SAASmF,MAAOhF,EAAMmE,OAAQc,UAAU,WAOzE,SAASF,GAAU/E,GACf,OAAKA,EAAMH,OAAUG,EAAMgF,MACvBhF,EAAMiF,UACN,6BAC2BjF,EAAMgF,MAAM5B,KAAI,SAAA8B,GAAC,OAAK,kBAACC,EAAA,EAAD,KAAQD,OAGzD,6BAEI,kBAACE,EAAA,EAAD,KACKpF,EAAMgF,MAAM5B,KAAI,SAAA8B,GAAC,OAAK,4BAAKA,QATC,KC3EtC,IAAMG,GAAb,4JAsBI,WACI,OACI,6BACI,6CACA,0GACA,6BAQA,kBAAC,GAAD,WAnChB,GAAkCzI,GAArByI,GACFxH,YAAcwH,GAAavH,KAyCtC,IAAMwH,GAAa,WAGf,IAAMC,EAASC,YAAU,CACrBxH,cAAe,CACXC,MAAO,IAEXM,SAAU,SAAAH,GACNmB,MAAMkG,KAAKC,UAAUtH,EAAQ,KAAM,OAG3C,OACI,0BAAMG,SAAUgH,EAAO7G,cACnB,2BAAOE,QAAQ,SAAf,iBACA,2BACI+G,GAAG,QACH7H,KAAK,QACLe,KAAK,QACL+G,SAAUL,EAAOM,aACjBtC,MAAOgC,EAAOnH,OAAOH,QAGzB,4BAAQY,KAAK,UAAb,Y,YCpDZhC,IAAQiJ,WAAW,gB,IAGEC,G,4JAMjB,WAEA,OACI,kBAAC,EAAD,KACI,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAInH,UAAWa,IACjC,kBAAC,IAAD,CAAOsG,KAAK,YAAYnH,UAAWzB,IACnC,kBAAC,IAAD,CAAO4I,KAAK,WAAWnH,UAAWf,IAClC,kBAAC,IAAD,CAAOkI,KAAK,UAAUnH,UAAW0E,IACjC,kBAAC,IAAD,CAAOyC,KAAK,iBAAiBnH,UAAWuG,KACxC,kBAAC,IAAD,CAAOY,KAAK,aAAanH,UAAW8D,IACpC,kBAAC,IAAD,CAAO9D,UAAW6D,U,GAlBDvF,aAAZ2I,GACVlI,YAAckI,GAAIjI,KCV7B,IAAMoI,GAAcC,QACW,cAA7BpJ,OAAOC,SAASoJ,UAEa,UAA7BrJ,OAAOC,SAASoJ,UAEhBrJ,OAAOC,SAASoJ,SAASC,MACvB,2DA6BJ,SAASC,GAAiBC,GACxBC,UAAUC,cACPC,SAASH,GACTlH,MAAK,SAAAsH,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBlG,QACf6F,UAAUC,cAAcO,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrB1H,OAAM,SAAA2H,GACLF,QAAQE,MAAM,4CAA6CA,MC/DjEtK,IAAQiJ,WAAW,eAAgB,CAC/BsB,OAAO,EACPC,UAAW,CAAEC,oBAAqB,OAGtC,IAAMC,GAAcC,SAASC,eAAe,QAI5CC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,GAAD,OAEFJ,IDAa,WACb,GAA6C,kBAAmBf,UAAW,CAGzE,GADkB,IAAIoB,IAAIC,GAAwB9K,OAAOC,UAC3C8K,SAAW/K,OAAOC,SAAS8K,OAIvC,OAGF/K,OAAOgL,iBAAiB,QAAQ,WAC9B,IAAMxB,EAAK,UAAMsB,GAAN,sBAEP3B,GAwCV,SAAkCK,GAEhCyB,MAAMzB,GACHlH,MAAK,SAAAC,GAGkB,MAApBA,EAAS2I,SACuD,IAAhE3I,EAAS4I,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C5B,UAAUC,cAAc4B,MAAMhJ,MAAK,SAAAsH,GACjCA,EAAa2B,aAAajJ,MAAK,WAC7BtC,OAAOC,SAASuL,eAKpBjC,GAAgBC,MAGnB/G,OAAM,WACLyH,QAAQC,IACN,oEA5DAsB,CAAwBjC,GAGxBD,GAAgBC,OCjBxBkC,K","file":"static/js/main.07533d0a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactGA from 'react-ga';\r\n\r\nexport default class BaseComponent extends Component {\r\n    componentDidMount() {\r\n        //alert(window.location.pathname + window.location.search);\r\n        ReactGA.pageview(window.location.pathname + window.location.search);\r\n\r\n        window.scrollTo(0, 0);\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport BaseComponent from './BaseComponent'\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Jumbotron, Button } from 'reactstrap';\r\n\r\nexport class About extends BaseComponent {\r\n    static displayName = About.name;\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <h1>I'm Noah Wright</h1>\r\n                    <h2>Software engineer, husband, father, and Air Force Reservist</h2>\r\n                </Row>\r\n                <Row>\r\n                    <Jumbotron>\r\n                    <h1>My Philosophy</h1>\r\n                    <h2>Leave the place better than you found it</h2>\r\n                    <p>\r\n                        Whether talking about our impact on the environment, the way we way raise our children, or the amount of tech debt \r\n                        in the repository we're working in, I think it's important that we all make sure to leave behind a net positive \r\n                        everywhere that we go.  I may not be able to change the world all by myself, but I can make sure I make it a tiny\r\n                        bit better.  If we all do that, we <i>can</i> change the world - together.\r\n                    </p>\r\n                    </Jumbotron>\r\n                </Row>\r\n                <Row>\r\n                    <h1>My Background</h1>\r\n                </Row>\r\n                <Row>\r\n                    <h4>Humble Beginnings</h4>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={9}>\r\n                        For as long as I can remember, I've wanted to make video games.  As a teenager, I saw other kids playing games\r\n                        on their TI=83 calculators.  Like many of us with hand-me-down calculators, I didn't have the cable that would let me\r\n                        connect to a computer and get games loaded to my TI-83, so I went about creating my own.  The games were simple,\r\n                        but they helped me learn about the basics of variables and program flow.  They were a mess of GOTO statements, but\r\n                        they worked, and that was exciting enough.\r\n                    </Col>\r\n                    <Col sm={3}>\r\n                        //TODO: Picture of TI-83 calculator, preferably the coding interface\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <h4>Early Successes</h4>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={3}>\r\n                        //TODO: Video of my early game effort\r\n                    </Col>\r\n                    <Col sm={9}>\r\n                        In the mid-2000's, a coworker of mine suggested I look into C#.  Microsoft had recently rolled out their indie game\r\n                        marketplace and their DirectX-based XNA framework.  After a lot of tinkering, I was very proud of the little shmup\r\n                        that I had create.  <i>//TODO: Embed YouTube video.</i>  Unfortunately that source code is long lost, but my early game\r\n                        dev efforts live on in that YouTube video.\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={9}>\r\n                        By the late-2000's, I had gotten a job at a small business via a temp agency.  I spent most of my day comparing\r\n                        shipping rates between UPS and USPS to make sure each package used the least expensive shipping method.  Using my\r\n                        self-taught knowledge, I went home and wrote a program to do that work for.  When I told my boss I'd programmed myself\r\n                        out of a job, he was thrilled.  I spent the rest of my time there working different odd jobs at the company, always\r\n                        thinking of how it could be automated or improved.\r\n                    </Col>\r\n                    <Col sm={3}>\r\n                        R\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <h4>From small business to big government</h4>\r\n                </Row>\r\n                <Row>\r\n                    Unfortunately, the small business wasn't a viable long-term solution.  I needed health insurance; I wanted to get my\r\n                    bachelor's degree; I needed a career.  After I found out the Air Force needed programmers, it was a short time before\r\n                    I was shipping off to basic training.\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={3}>\r\n                        <i>TODO: Picture of me in uniform</i>\r\n                    </Col>\r\n                    <Col sm={9}>\r\n                        After basic training and technical school, I got orders to Maxwell Air Force Base.  There I finally got to work on a\r\n                        large scale with a team of programmers.  I made friends, learned from the more senior programmers, and got a lot of\r\n                        great leadership experience.\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    So much leadership experience, in fact, that in 2016, I was selected by my commander to become an instructor at \r\n                    Maxwell's Airman Leadership School.  Taking me out of the technical role was a chance to grow even better at public\r\n                    speaking, mentorship, and leading teams.  It was an invaluable experience that has helped shape the person I am today.\r\n                </Row>\r\n                <Row>\r\n                    <h4>The best of both worlds</h4>\r\n                </Row>\r\n                <Row>\r\n                    In 2020, I opted to switch from active duty to the Air Force Reserve, becoming a cyber defense operator with the 689th\r\n                    Network Operations Squadron while re-entering the civilian workforce as a software engineer.  I have the unique\r\n                    position of being able to help defend DoD networks while also working on new technologies in the civilian sector, all \r\n                    while staying close to home where I can spend more time with my amazing wife and four wonderful children.\r\n                </Row>\r\n                <Row>\r\n                    <Col>//TODO: Picture in uniform</Col>\r\n                    <Col>//TODO: Picture in business casual</Col>\r\n                </Row>\r\n                <Row>\r\n                    Does this sound like the story of somebody you want on your team?\r\n                </Row>\r\n                <Row>\r\n                    <Link to='/contact'><Button>get in touch</Button></Link>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport BaseComponent from './BaseComponent'\r\nimport { Formik, Form, Field, ErrorMessage, } from 'formik';\r\nimport axios from 'axios';\r\n//import { Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\n//TODO: Switching back to Formik made this ugly again - need to make it prettier\r\n\r\nexport class Contact extends BaseComponent {\r\n    static displayName = Contact.name;\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Contact Noah</h1>\r\n\r\n                <Formik\r\n                    initialValues={{ email: '', name: '', message: '' }}\r\n                    validate={values => {\r\n                        const errors = {};\r\n                        if (!values.name) {\r\n                            errors.name = 'Required';\r\n                        }\r\n\r\n                        if (!values.email) {\r\n                            errors.email = 'Required';\r\n                        } else if (\r\n                            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                        ) {\r\n                            errors.email = 'Invalid email address';\r\n                        }\r\n\r\n                        if (!values.message) {\r\n                            errors.message = 'Required';\r\n                        }\r\n                        return errors;\r\n                    }}\r\n                    onSubmit={(values, { setSubmitting }) => {\r\n                        setTimeout(() => {\r\n                            this.handleSubmit(values);\r\n                            setSubmitting(false);\r\n                        }, 400);\r\n                    }}\r\n                >\r\n                    {({ isSubmitting }) => (\r\n                        <Form>\r\n                            <div>\r\n                                <label htmlFor=\"name\">Name</label>\r\n                                <Field type=\"text\" name=\"name\" />\r\n                                <ErrorMessage name=\"name\" component=\"div\" />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"email\">Email Address</label>\r\n                                <Field type=\"email\" name=\"email\" />\r\n                                <ErrorMessage name=\"email\" component=\"div\" />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"message\">Message to Send</label><br />\r\n                                <Field type=\"text\" as=\"textarea\" name=\"message\" />\r\n                                <ErrorMessage name=\"message\" component=\"div\" />\r\n                            </div>\r\n                            <div>\r\n                                <button type=\"submit\" disabled={isSubmitting}>\r\n                                    Submit\r\n                                </button>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n                {/*TODO: Have a success message appear here*/}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleSubmit(args) {\r\n        var request = {\r\n            name: args.name,\r\n            email: args.email,\r\n            message: args.message\r\n        };\r\n\r\n        var url = 'https://noahwrightwebservices.azurewebsites.net/ContactMe/Send';\r\n        axios.post(url, request,\r\n        )\r\n            .then(response => {\r\n                alert(\"Thanks for reaching out!  I'll be in touch!\");\r\n            })\r\n            .catch(err => {\r\n                alert(\"Error occurred while sending the message - please try again later!\");\r\n            })\r\n            .finally(() => {\r\n                //Clean-up would go here\r\n            });\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport BaseComponent from './BaseComponent'\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Jumbotron, Button } from 'reactstrap';\r\nimport { Card, CardText, CardBody, CardTitle } from 'reactstrap';\r\n//TODO: Create \"howitsmade\" component with popover, put it on this page as a \"how it's done\" and explain the technology used\r\n//  Then use it elsewhere as well\r\n\r\nexport class Home extends BaseComponent {\r\n    static displayName = Home.name;\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Jumbotron>\r\n                        <h1>I'm Noah - a software developer</h1>\r\n                        <p>Take a look around and see what I've been up to.  Think I'd be a good addition\r\n                            to your dev team or open source project?</p>\r\n                        <Link to=\"contact\"><Button>Hit me up!</Button></Link>\r\n                    </Jumbotron>\r\n                </Container>\r\n                <Container>\r\n                    <Row>\r\n                        <Col sm=\"6\">\r\n                            <HomeCard title=\"Resume\" linkUrl=\"resume\" description=\"Read about my work history\" />\r\n                        </Col>\r\n                        <Col sm=\"6\">\r\n                            <HomeCard title=\"Portfolio\" linkUrl=\"portfolio\" description=\"See examples of my work\" />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col sm=\"6\">\r\n                            <HomeCard title=\"About Me\" linkUrl=\"about-me\" description=\"Learn about the man behind the site\" />\r\n                        </Col>\r\n                        <Col sm=\"6\">\r\n                            <HomeCard title=\"Contact Me\" linkUrl=\"contact\" description=\"Get in touch\" />\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction HomeCard(props) {\r\n    return (\r\n        <Card body>\r\n            <CardTitle tag=\"h4\">\r\n                {props.title || \"Untitled\"}\r\n            </CardTitle>\r\n            <CardBody>\r\n                <CardText>{props.description || \"No Description\"}</CardText>\r\n                <Link to={props.linkUrl || \"#\"}><Button>{props.linkText || \"Click here\"}</Button></Link>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true\r\n    };\r\n  }\r\n\r\n  toggleNavbar () {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <header>\r\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\">NoahWright.dev</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n              <ul className=\"navbar-nav flex-grow\">\r\n                <NavItem><NavLink tag={Link} className=\"text-dark\" to=\"/\">Home</NavLink></NavItem>\r\n                <NavItem><NavLink tag={Link} className=\"text-dark\" to=\"/resume\">Resume</NavLink></NavItem>\r\n                <NavItem><NavLink tag={Link} className=\"text-dark\" to=\"/portfolio\">Portfolio</NavLink></NavItem>\r\n                <NavItem><NavLink tag={Link} className=\"text-dark\" to=\"/about-me\">About</NavLink></NavItem>\r\n                <NavItem><NavLink tag={Link} className=\"text-dark\" to=\"/contact\">Contact</NavLink></NavItem>\r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container, Button, ButtonGroup } from 'reactstrap';\r\n\r\nconst centering = {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center'\r\n};\r\n\r\nexport class Footer extends Component {\r\n    static displayName = Footer.name;\r\n\r\n    render() {\r\n        return (\r\n            <Container style={centering} >\r\n                <hr />\r\n                <ButtonGroup size=\"sm\">\r\n                    <FooterItem url=\"https://www.linkedin.com/in/noah-wright-dev/\" name=\"LinkedIn\" />\r\n                    <FooterItem url=\"https://github.com/NoahWright87\" name=\"GitHub\" />\r\n                </ButtonGroup>\r\n                <Container>\r\n                    <p>Want to peak behind the curtain? Check out <a href=\"https://github.com/NoahWright87/NoahWright87.github.io\" target=\"_black\" >this site's GitHub repo</a></p>\r\n                    <p>&#169; {new Date().getFullYear()} <a href=\"http://NoahWright.dev\">NoahWright.dev</a></p>\r\n                </Container>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nfunction FooterItem(props) {\r\n    return (\r\n        <Button href={props.url || \"#\"} target=\"_blank\">\r\n            {props.name || \"UNDEFINED\"}\r\n        </Button>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\nimport { Footer } from './Footer';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n    render() {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport BaseComponent from './BaseComponent'\r\n\r\nexport class NotFound extends BaseComponent {\r\n    static displayName = NotFound.name;\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Uhoh</h1>\r\n                <p>Looks like you tried to go somewhere that doesn't exist!</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport BaseComponent from './BaseComponent'\r\nimport { Container, Row, Col, Button, Jumbotron } from 'reactstrap';\r\nimport { Card, CardText, CardBody, CardTitle } from 'reactstrap';\r\n\r\nexport class Portfolio extends BaseComponent {\r\n    static displayName = Portfolio.name;\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h1>Portfolio</h1>\r\n                <Row>\r\n                    <Col sm=\"6\">\r\n                        <PortfolioCard title=\"NoahWright.dev\" description=\"My developer site, hosted on GitHub and built with\r\n                        React.\" />\r\n                    </Col>\r\n                    <Col sm=\"6\">\r\n                        <PortfolioCard title=\"Level Up Learning\" description=\"A learning app I've been working on to help my kids\r\n                        work on school.  It came in very handy during the COVID-19 learn-from-home nightmare of 2020\"\r\n                        linkUrl=\"https://github.com/NoahWright87/LevelUpLearning\" linkText=\"View on GitHub\" />\r\n                    </Col>\r\n                </Row>\r\n                <Jumbotron flex>\r\n                    <h3>Games</h3>\r\n                    <p>Wanting to make video games is how I originally got into programming.  These are some little projects I\r\n                        made using Unity game engine.</p>\r\n                </Jumbotron>\r\n                <Row>\r\n                    <Col sm=\"6\">\r\n                        <PortfolioCard title=\"Dot Dodger\" description=\"Simple game where you (the blue dot) tries to avoid the evil\r\n                        red dots for as long as you can.  Gain extra points for getting dangerously close to enemies.  Made in Unity\"\r\n                            linkUrl=\"https://gamesdonewright.itch.io/dot-dodger\" linkText=\"View on itch.io\" />\r\n                    </Col>\r\n                    <Col sm=\"6\">\r\n                        <PortfolioCard title=\"Missile Defender\" description=\"Basic Missile Command clone, made in Unity.\"\r\n                            linkUrl=\"https://gamesdonewright.itch.io/missile-defender\" linkText=\"View on itch.io\" />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm=\"6\">\r\n                        <PortfolioCard title=\"Paddles 'n Balls\" description=\"Pong clone, made in Unity\"\r\n                            linkUrl=\"https://gamesdonewright.itch.io/paddles-n-balls\" linkText=\"View on itch.io\" />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nfunction PortfolioCard(props) {\r\n    return (\r\n        <Card>  {/*TODO: Include an image, link via that image*/}\r\n            <CardTitle tag=\"h2\">\r\n                {props.title || \"Untitled\"}\r\n            </CardTitle>\r\n            <CardBody>\r\n                <CardText>{props.description || \"No Description\"}</CardText>\r\n                <Button href={props.linkUrl || \"https://noahwright.dev\"} target=\"_blank\">{props.linkText || \"Click here\"}</Button>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport BaseComponent from './BaseComponent'\r\nimport { Container, Row, Col, Jumbotron, CardSubtitle, List } from 'reactstrap';\r\nimport { Badge, Card, CardBody, CardTitle } from 'reactstrap';\r\nimport resumeData from './data/resume.json';\r\nvar _ = require('lodash');\r\n\r\nconst groupings = _.chain(resumeData).groupBy('category').map((resumeItems, category) => ({ resumeItems, category })).value();\r\n\r\nexport class Resume extends BaseComponent {\r\n    static displayName = Resume.name;\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h1>Resume</h1>\r\n                <p><i>NOTE: This resume is generated programmatically from <a href=\"resume.json\" target=\"_blank\">this JSON</a>.</i></p>\r\n                {groupings.map(g => (\r\n                    <Container>\r\n                        <Jumbotron className=\"display-4\">\r\n                            {g.category}\r\n                        </Jumbotron>\r\n                        {g.resumeItems.map(r => (\r\n                            <ResumeItem title={r.title} organization={r.organization} location={r.location}\r\n                                startDate={r.startdate} endDate={r.enddate} showMonths=\"true\"\r\n                                accomplishments={r.accomplishments} skills={r.skills} />\r\n                        ))}\r\n                    </Container>\r\n                ))}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst monthYearFormat = new Intl.DateTimeFormat(\"en-US\", { year: \"numeric\", month: \"short\" });\r\nconst yearFormat = new Intl.DateTimeFormat(\"en-US\", { year: \"numeric\" });\r\n\r\n\r\nfunction ResumeItem(props) {\r\n    var dateDisplay;\r\n    var dateFormat = props.showMonths ? monthYearFormat : yearFormat;\r\n    if (props.startDate && props.endDate) {\r\n        dateDisplay = <h4>{dateFormat.format(new Date(props.startDate))} to {dateFormat.format(new Date(props.endDate))}</h4>\r\n    } else if (props.startDate) {\r\n        dateDisplay = <h4>{dateFormat.format(new Date(props.startDate))} to Present</h4>\r\n    } else if (props.startDate || props.endDate) {\r\n        dateDisplay = <h4>{dateFormat.format(new Date(props.endDate))}</h4>\r\n    } else dateDisplay = null;\r\n\r\n    var orgLocDisplay;\r\n    if (props.organization && props.location) orgLocDisplay = <h3>{props.organization}, {props.location}</h3>\r\n    else if (props.organization || props.location) orgLocDisplay = <h3>{props.organization ? props.organization : props.location}</h3>\r\n    else orgLocDisplay = null;\r\n    \r\n    return (\r\n        <Card>\r\n            <CardTitle>\r\n                <h2>{props.title}</h2>\r\n            </CardTitle>\r\n            <CardSubtitle>\r\n                <Row>\r\n                    <Col sm=\"9\">\r\n                        {orgLocDisplay}\r\n                    </Col>\r\n                    <Col sm=\"3\" className=\"text-right\">\r\n                        {dateDisplay}\r\n                    </Col>\r\n                </Row>\r\n            </CardSubtitle>\r\n            <CardBody>\r\n                <ListItems title=\"Accomplishments\" items={props.accomplishments} />\r\n                <ListItems title=\"Skills\" items={props.skills} useBadges=\"true\" />\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\n/*TODO: Take a CSS class name, so not all lists of items have to display the same*/\r\nfunction ListItems(props) {\r\n    if (!props.title || !props.items) return null;\r\n    if (props.useBadges) return (\r\n        <div>\r\n            {/*{props.title} : */}{props.items.map(i => (<Badge>{i}</Badge>))}\r\n        </div>\r\n    ); else return (\r\n        <div>\r\n            {/*<h3>{props.title}</h3>*/}\r\n            <List>\r\n                {props.items.map(i => (<li>{i}</li>))}\r\n            </List>\r\n        </div>\r\n    );\r\n};\r\n","import React, { Component } from 'react';\r\nimport BaseComponent from './BaseComponent'\r\nimport { useFormik, Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nexport class CreateResume extends BaseComponent {\r\n    static displayName = CreateResume.name;\r\n\r\n    //constructor(props) {\r\n    //    super(props);\r\n    //    this.state = { value: '' };\r\n\r\n        \r\n    //}\r\n\r\n    //handleChange(event) {\r\n    //    this.setState({ value: event.target.value });\r\n    //}\r\n\r\n    //handleSubmit(event) {\r\n    //    alert('Submit has happened!');\r\n    //    event.preventDefault();\r\n    //}\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Create Resume</h1>\r\n                <p>TODO: Use this page to create the JSON that will be used on the Resume page</p>\r\n                <hr />\r\n\r\n                {/*<form onSubmit={this.handleSubmit}>*/}\r\n                {/*    <label>Name:*/}\r\n                {/*        <input type=\"text\" value={this.state.value} onChange={this.handleChange} />*/}\r\n                {/*    </label>*/}\r\n\r\n                {/*</form>*/}\r\n                <SignupForm />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst SignupForm = () => {\r\n    // Pass the useFormik() hook initial form values and a submit function that will\r\n    // be called when the form is submitted\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n        },\r\n        onSubmit: values => {\r\n            alert(JSON.stringify(values, null, 2));\r\n        },\r\n    });\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <label htmlFor=\"email\">Email Address</label>\r\n            <input\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.email}\r\n            />\r\n\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    );\r\n};","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router';\r\n//import { createBrowserHistory } from 'createBrowserHistory';\r\nimport { About } from './components/About';\r\nimport { Contact } from './components/Contact';\r\nimport { Home } from './components/Home';\r\nimport { Layout } from './components/Layout';\r\nimport { NotFound } from './components/NotFound';\r\nimport { Portfolio } from './components/Portfolio';\r\nimport { Resume } from './components/Resume';\r\nimport { CreateResume } from './components/CreateResume';\r\nimport './custom.css';\r\n//import './components/styles/colors.scss';\r\n//import './components/styles/test.scss';\r\nimport './components/styles/custom.scss';\r\nimport ReactGA from 'react-ga';\r\nReactGA.initialize('G-PMVRSR4QHY');\r\n//ReactGA.pageView(window.location.pathname);\r\n\r\nexport default class App extends Component {\r\n    static displayName = App.name;\r\n\r\n    \r\n\r\n\r\n    render() {\r\n        \r\n    return (\r\n        <Layout>\r\n            <Switch>\r\n                {/*render={props => { ReactGA.pageView(props.location.pathname); }}*/}\r\n                <Route exact path='/' component={Home} />\r\n                <Route path='/about-me' component={About} />\r\n                <Route path='/contact' component={Contact} />\r\n                <Route path='/resume' component={Resume} />\r\n                <Route path='/create-resume' component={CreateResume} />\r\n                <Route path='/portfolio' component={Portfolio} />\r\n                <Route component={NotFound} />\r\n            </Switch>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport ReactGA from 'react-ga';\r\nReactGA.initialize('G-PMVRSR4QHY', {\r\n    debug: true,\r\n    gaOptions: { siteSpeedSampleRate: 100 }\r\n});\r\n\r\nconst rootElement = document.getElementById('root');\r\n\r\n//ReactGA.pageview(window.location.pathname + window.location.search);\r\n//alert(window.location.pathname + window.location.search);\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}